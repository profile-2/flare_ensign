name: Build Flare Ensign

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install MinGW
      run: |
        sudo apt-get update
        sudo apt-get install -y mingw-w64 g++-mingw-w64-x86-64 zip
        sudo update-alternatives --install /usr/bin/x86_64-w64-mingw32-gcc x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix 60
        sudo update-alternatives --install /usr/bin/x86_64-w64-mingw32-g++ x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix 60
        sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
        sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
    - name: Compile and ZIP
      run: |
        x86_64-w64-mingw32-g++ -std=c++17 -g -Wno-narrowing -static-libgcc -static-libstdc++ -o flare_ensign.exe src/flare_ensign.cpp -I src/OneLoneCoder -lopengl32 -lshlwapi -lgdiplus -ldwmapi -lgdi32 -mwindows -pthread
        ls -l flare_ensign.exe assets
        zip -r flare_ensign.zip flare_ensign.exe assets/
        ls -l flare_ensign.zip
    - name: Upload to Release
      uses: softprops/action-gh-release@v2
      with:
        files: flare_ensign.zip
        tag_name: v${{ github.run_number }}
        name: Release ${{ github.run_number }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}